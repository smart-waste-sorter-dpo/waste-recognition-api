[project]
name = "waste-recognition-api"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "fastapi[standard]>=0.115.8",
    "pillow>=11.1.0",
    "pre-commit>=4.1.0",
    "pydantic-settings>=2.8.0",
    "pyright[nodejs]>=1.1.394",
    "uvicorn>=0.34.0",
]

[dependency-groups]
dev = [
    "pyright>=1.1.394",
    "pytest>=8.3.4",
    "pytest-asyncio>=0.25.3",
    "pytest-cov>=6.0.0",
    "ruff>=0.9.7",
]

[tool.poe.tasks.lint]
help = "Perform linting on all files"
cmd = "uv run ruff check --fix"

[tool.poe.tasks.format]
help = "Format all files"
cmd = "uv run ruff format"

[tool.poe.tasks.test]
help = "Test the app"
cmd = "uv run pytest -v --durations=0 --cov"
deps = ["lint", "format"]

[tool.poe.tasks.start]
help = "Start the app"
cmd = "uv run uvicorn src.app.main:app --host 0.0.0.0 --port 8000 --reload"

[tool.ruff]
# Set the maximum line length to 79.
line-length = 79

[tool.ruff.lint]
# Add the `line-too-long` rule to the enforced rule set. By default, Ruff omits rules that
# overlap with the use of a formatter, like Black, but we can override this behavior by
# explicitly adding the rule.
extend-select = ["E501"]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "-ra"
]
testpaths = [
    "tests",
    "integration",
]
pythonpath = [
    ".", "tests"
]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "session"

[tool.pyright]
venvPath = "."
venv = ".venv"
